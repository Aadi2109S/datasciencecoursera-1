y[y > 0]
x[x>0]
x [!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector  <- c(4,5))
dim(myVector)  <- c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
myMatrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
identical(myMatrix, myMatrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients, myMatrix)
myData <- data.frame(patients,myMatrix)
myData
class(myData)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(myData) <- cnames
myData
posts <- load("/tmp/items.csv")
posts <- load("/tmp/items.csv")
posts <- load("/tmp/items2.csv")
posts <- load("/tmp/items2.csv")
posts <- load("/tmp/items2.csv")
posts <- read.table("/tmp/items2.csv")
posts <- read.csv("/tmp/items2.csv")
posts
posts <- read.csv("/tmp/items.csv")
head(pos)
head(posts)
posts <- read.csv("/tmp/items2.csv")
head(posts)
posts <- read.csv("/tmp/items.csv")
head(posts)
names(posts)
posts <- posts[2:4,]
posts
posts <- read.csv("/tmp/items.csv")
posts <- posts[,2:4]
posts
names(posts)
table(posts$date)
barplot(table(posts$date))
plot(table(posts$date))
head(posts)
posts$date[1]
typeof(posts$date[1])
date <- as.Date(posts$date[1])
date <- as.Date.character(posts$date[1])
date <- as.Date.character(posts$date[1],format="%B %d %Y")
date
date <- as.Date.character(posts$date[1],format="%B %d, %Y")
date
date <- as.Date(posts$date[1],format="%B %d, %Y")
date
date <- as.Date(posts$date[1],"%B %d, %Y")
date
posts$date[1]
strDate <- posts$date[1]
typeof(strDate)
strDate <- as.Character(posts$date[1])
strDate <- as.Char(posts$date[1])
strDate <- as.character(posts$date[1])
date <- as.Date(strDate,"%B %d, %Y")
date
help(as.Date)
help(read.csv)
posts <- read.csv("/tmp/items.csv", colClasses=c("Date","character","character"))
posts <- read.csv("/tmp/items.csv", colClasses=c("character","character","character"))
posts
head(posts)
posts <- read.csv("/tmp/items.csv", colClasses=c("character","Date","character","character"))
posts <- read.csv("/tmp/items.csv")
posts <- read.csv("/tmp/items.csv", colClasses=c("character","character","character","character"))
gsub(",", "", posts$date)
head(posts$date)
posts$date <- gsub(",", "", posts$date)
head(posts$date)
posts$date <- as.Date(posts$date, format = "%B %d %Y")
head(posts)
date <- "June 18 2009"
x <- as.Date(date)
x <- as.Date(date,format="%B %d %Y")
x
x <- as.Date.character(date,format="%B %d %Y")
x
typeof(date)
?as.Date
library('swirl')
rm(list=ls())
swirl
swirl()
c(0.5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
print(my_char)
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Patricio")
my_name
paste(my_name,collapse=" ")
paste("Hello", "world!", sep=" ")
paste(c(1,2,3),c("X","Y","Z"), sep = "")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x <- c(44,NA,5,NA)
x * 3
y <- rnorm(1000)
z <- rep(NA,1000)
myData <- sample(c(y,z),100)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0/0
Inf - Ind
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
myMatric2 <- matrix(data = 1:20,nrow=4,ncol=5)
myMatric2 <- matrix(1:20,nrow=4,ncol=5)
myMatrix2 <- matrix(1:20,nrow=4,ncol=5)
identical(myMatrix,myMatrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,myMatrix)
myData <- data.frame(patients,myMatrix)
myData
class(myData)
cnames <- c("patient","age","weight", "bp", "rating","test")
colnames(myData) <- cnames
myData
5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z * 2 + 100
mySqrt <- sqrt(z-1)
mySqrt
myDiv <- z / mySqrt
myDiv
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
1:20
pi:10
15:1
?':'
?`:`
seq(1,20)
seq(0,10,by=0,5)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each = 10)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
print tbl_df
print(tbl_df)
cran
?manip
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country+)
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
cran
select(cran,-(1:size))
select(cran,-(X:size))
filter(cran,package == "swirl")
filter(cran,r_version == "3.1.1", country == "US")
swirl()
filter(cran,r_version == "3.1.1", country == "US")
ls()
remove(list=ls())
ls(9)
ls()
data <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
file_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(file_url,destfile = "/tmp/data.csv",method = "curl")
download.file(file_url,destfile = "/tmp/data.csv")
download.file(file_url,destfile = "/tmp/data.csv", method = "auto")
?download.file
download.file(file_url,destfile = "/tmp/data.csv", method = "wget")
data <- read.csv("/tmp//data.csv")
head(data)
names(data)
summary(data)
dim(data)
data$VAL[q:10]
data$VAL[1:10]
values <- data$VAL[!is.na(data$VAL)]
values[1:10]
length(values[values >= 14])
length(values)
values > 14
(values > 14)[1:10]
values[1:10]
values_greater_than_14 <- values[values >= 14]
length(values[values = 24])
length(values[values == 24])
(values[values == 24])
data[data$VAL == 24]
houses <- data
rm(data)
houses[1:10]
houses[houses$VAL == 24]
houses$FES[1:10]
file2_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(file2_url,"/tmp/gas.xlsx",method = "wget")
library(xlsx)
install.packages("xlsx")
library(xlsx)
library("xlsx")
library("xlsx2")
install.packages("xlsx2")
data <- read.table("/tmp/gas.xlsx")
head(data)
install.packages("xlsx")
library(xlsx)
library(xlsx)
library(rJava)
install.packages("rJava")
install.packages("rJava")
acs <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
file_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(file_url,"/tmp/data.csv",method = "get")
download.file(file_url,"/tmp/data.csv",method = "wget")
acs <- read.csv("/tmp/data.csv")
dim(acs)
head(acs)
dim(acs)
str(acs)
install.packages("sqldf")
library('sqldf')
sqldf("select * from acs")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf("select pwgtp1 from acs")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select pwgtp1, AGEP from acs where AGEP < 50")
sqldf("select pwgtp1, AEGP from acs where AGEP < 50 and pwgtp1")
sqldf("select pwgtp1, AGEP from acs where AGEP < 50 and pwgtp1")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
unique(acs$AGEP)
identical(unique(acs$AGEP),sqldf("select unique * from acs"))
?identical
subset1 <- unique(acs$AGEP)
subset1
subset1 <- sqldf("select unique * from acs")
sqldf("select unique * from acs")
sqldf("select unique * from acs")
sqldf("select distinct pwgtp1 from acs")
sqldf("select AGEP where unique from acs")
sqldf("select distinct AGEP from acs")
identical(subset1,sqldf("select distinct AGEP from acs"))
str(unique(acs$AGEP))
str(sqldf("select distinct AGEP from acs"))
install.packages('httr')
library('httr')
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
html <- GET(url)
html
html[10]
html[,10]
str(htl)
str(html)
html$content
content <- content(html,as="text")
?content
content
content <- content(html,as="parsed")
install.packages('XML')
library('XML')
content <- content(html,as="text")
content
parsed_content(content)
parsed_content(content, as = 'parsed')
parsed(content, as = 'parsed')
content
content <- content(html,type = "text/xml")
install.packages('XML')
install.packages('XML')
content <- content(html,type = "text/xml")
content
library('XML')
parsed_html <- htmlParse(content, asText = TRUE)
parsed_html
str(parsed_html)
parsed_html[1]
parsed_html[1,]
parsed_html
nchar(parsed_html)
con = url(url)
htmlCode = readLines(con)
htmlCode
htmlCode[]10
htmlCode[10]
close(con)
htmlCode[10] htmlCode[20] htmlCode[30] htmlCode[100]
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
con = url(url)
htmlCode = readLines(con)
close(con)
htmlCode[10]; htmlCode[20]; htmlCode[30]; htmlCode[100]
length(htmlCode[10])
as.Text(htmlCode[10])
as.character(htmlCode[10])
lenght(as.character(htmlCode[10]))
length(as.character(htmlCode[10]))
nchar(htmlCode[10])
typeof(htmlCode[10])
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
?download.file
download.file(url5,"/tmp/data5.csv",method = "wget")
url5 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(url5,"/tmp/data5.csv",method = "wget")
data5 <- read.delim("/tmp/data5.csv")
head(data5)
str(data5)
data5 <- read.delim2("/tmp/data5.csv")
str(data5)
?read.delim
data5 <- read.delim2("/tmp/data5.csv",header = TRUE)
str(data5)
dim(data5)
data5 <- read.delim("/tmp/data5.csv",header = TRUE)
dim(data5)
dim(data5)
dec = ".", fill = TRUE, comment.char = "", ...)
data5 <- read.delim(file, header = TRUE, sep = "\t", quote = "\"",
data5 <- read.delim(file, header = TRUE, sep = "\t", quote = "\"",
dec = ".", fill = TRUE, comment.char = "", ...)
data5 <- read.delim(file, header = TRUE, sep = "\t", quote = "\"", dec = ".", fill = TRUE, comment.char = "", ...)
data5 <- read.delim(file, header = TRUE, sep = "\t", quote = "\"", dec = ".", fill = TRUE, comment.char = "")
data5 <- read.delim(data5, header = TRUE, sep = "\t", quote = "\"", dec = ".", fill = TRUE, comment.char = "")
data5 <- read.delim("/tmp/data5.csv", header = TRUE, sep = "\t", quote = "\"", dec = ".", fill = TRUE, comment.char = "")
dim(data5)
dim(data5)
download.file(url5,"/tmp/data5.foo",method = "wget")
data5 <- read.delim("/tmp/data5.foo", header = TRUE, sep = "\t", quote = "\"", dec = ".", fill = TRUE, comment.char = "")
data5
str(data5)
data5 <- read.delim("/tmp/data5.for", header = TRUE, sep = "\t", quote = "\"", dec = ".", fill = TRUE, comment.char = "")
url5 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(url5,"/tmp/data5.for",method = "wget")
data5 <- read.delim("/tmp/data5.for", header = TRUE, sep = "\t", quote = "\"", dec = ".", fill = TRUE, comment.char = "")
data5
str(data5)
data5 <- read.delim2("/tmp/data5.for", header = TRUE, sep = "\t", quote = "\"", dec = ".", fill = TRUE, comment.char = "")
str(data5)
data5 <- read.delim2("/tmp/data5.for")
str(data5)
data5 <- read.fwf("/tmp/data5.for",skip=4,widths=c(12, 7,4, 9,4, 9,4, 9,4)
str(data5)
str(data5)
download.file(url5,"/tmp/data5.for",method = "wget")
data5 <- read.fwf("/tmp/data5.for",skip=4,widths=c(12, 7,4, 9,4, 9,4, 9,4)
data5 <- read.fwf("/tmp/data5.for",skip=4,widths=c(12, 7,4, 9,4, 9,4, 9,4))
data5 <- read.fwf("/tmp/data5.for",skip=4,widths=c(12, 7,4, 9,4, 9,4, 9,4))
str(data5)
sum(data5$V4)
ube <- function(x, n) {
x^3
}
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x <- Sys.Date()
x
typeof(x)
x <- Sys.tate()
time <- Sys.time()
typeof(time)
as.POSIXct(time)
time2 <- as.POSIXct(time)
time2$
names(time2)
time2 <- as.POSIXlt(time)
names(time2)
time2
names(unclass(time2)
)
class(time2)
typeof(time2)
time2$sec
weekdays(time2)
weekdays(time)
time2
time3 <- as.POSIXlt(Sys.time())
time3 > time2
time3$isdt
time3$isdst
time3$zone
time3$gmtoff
tiempo <- "January 10, 2012 10:40"
strptime(tiempo, %B %d)
strptime(tiempo, %B %d, %Y %H:%M)
Sys.setenv(LANG = "en")
strptime(tiempo, %B %d, %Y %H:%M)
defaults write org.R-project.R force.LANG en_US.UTF-8
defaults write org.R-project.R force.LANG en_US.UTF-8
help(Startup)
Sys.getenv("LANG")
Sys.setenv(LANG = "en_US.UTF-8")
Sys.getenv("LANG")
q()
Sys.getenv("LANG")
Sys.setenv(LANG = "en_US.UTF-8")
Sys.getenv("LANG")
source('~/Repos/datasciencecoursera/R Programming/pollutantmean.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
